// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// CakeController is an autogenerated mock type for the CakeController type
type CakeController struct {
	mock.Mock
}

// CreateCake provides a mock function with given fields: c
func (_m *CakeController) CreateCake(c *gin.Context) {
	_m.Called(c)
}

// DeleteCake provides a mock function with given fields: c
func (_m *CakeController) DeleteCake(c *gin.Context) {
	_m.Called(c)
}

// GetAllCakes provides a mock function with given fields: c
func (_m *CakeController) GetAllCakes(c *gin.Context) {
	_m.Called(c)
}

// GetCakeByID provides a mock function with given fields: c
func (_m *CakeController) GetCakeByID(c *gin.Context) {
	_m.Called(c)
}

// UpdateCake provides a mock function with given fields: c
func (_m *CakeController) UpdateCake(c *gin.Context) {
	_m.Called(c)
}

type mockConstructorTestingTNewCakeController interface {
	mock.TestingT
	Cleanup(func())
}

// NewCakeController creates a new instance of CakeController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCakeController(t mockConstructorTestingTNewCakeController) *CakeController {
	mock := &CakeController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
